/*
                             *******************
******************************* C HEADER FILE *******************************
**                           *******************                           **
**                                                                         **
** project    : Text to tweet converter                                    **
** filename   : dictionary.h                                               **
** version    : 1                                                          **
** date       : June 02, 2017                                              **
**                                                                         **
*****************************************************************************
VERSION HISTORY:
----------------
Version      : 1
Date         : June 02, 2017
Revised by   : Surjit Kumar Sahoo
Description  : Original version.
*/

#ifndef _DICTIONARY_H
#define _DICTIONARY_H

/****************************************************************************/
/**                                                                        **/
/**                          MODULES USED                                  **/
/**                                                                        **/
/****************************************************************************/
#include <stdio.h>

/****************************************************************************/
/**                                                                        **/
/**                    TYPEDEFS AND STRUCTURES                             **/
/**                                                                        **/
/****************************************************************************/
struct node{
  char word[50];
  char sort[10];
  struct node *next;
};

/****************************************************************************/
/**                                                                        **/
/**                         EXPORTED FUNCTIONS                             **/
/**                                                                        **/
/****************************************************************************/
int search(struct node *head, char *word);
/****************************************************************************/
/*
* Search node in the given list
*If found returns it's position or -1 on error
*/
/****************************************************************************/
struct node *newNode(struct node *head, char *word, char *meaning);
/****************************************************************************/
/*
 * Create a new node for the list
 */

/****************************************************************************/
void sortedInsert(struct node** headref, struct node* newnode);
/****************************************************************************/
/*
* Adds a new node to the list in sorted order
*/

/****************************************************************************/
void lookup(struct node *head, char *word);
/****************************************************************************/
/*
* lookup a node in the list
*/

/****************************************************************************/
struct node *del(struct node *head, char *word);
/****************************************************************************/
/*
* Search the element and delete the node from the list
*/

/****************************************************************************/
void print(struct node *head);
/****************************************************************************/
/*
* Print the Whole Dictionary
*/

/****************************************************************************/
void WriteData(struct node *head);
/****************************************************************************/
/*
* Save dictionary data to the file on disk
*/
/****************************************************************************/
void ReadData(struct node **head);
/****************************************************************************/
/*
* Read dictionary data from the file
*/

#endif
